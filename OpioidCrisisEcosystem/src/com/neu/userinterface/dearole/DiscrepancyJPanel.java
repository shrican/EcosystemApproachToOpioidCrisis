/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.userinterface.dearole;

import com.neu.business.enterprise.Enterprise;
import com.neu.business.enterprise.PharmacyEnterprise;
import com.neu.business.network.Network;
import com.neu.business.organization.ChemistOrganization;
import com.neu.business.organization.Organization;
import java.awt.Color;
import static java.awt.Color.WHITE;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JPanel;

/**
 *
 * @author Anmol
 */
public class DiscrepancyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DiscrepancyJPanel
     */
    
    class Slice {
   double value;
   Color color;
   public Slice(double value, Color color) {  
      this.value = value;
      this.color = color;
   }
}
    
    private JPanel userProcessContainer;
    private Network network;
    private HashMap<ChemistOrganization, Integer> slices;
    
    public DiscrepancyJPanel(JPanel userPrcessContainer, Network network) {
        initComponents();
        this.userProcessContainer = userPrcessContainer;
        this.network = network;
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
        
            for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                if(organization instanceof ChemistOrganization){
                    int discrepancy = (int) network.pharmacyStockDiscrepancy((ChemistOrganization) organization);
                    System.out.println("Discrepncy of "+organization.getName()+" is "+discrepancy);
                }
            
                }
        }
//        slices = createSlicesMap(network);
        
    }
    
//    public void paint(Graphics g) {
//      drawPie((Graphics2D) g, getBounds(), slices);
//   }
//    
//     void drawPie(Graphics2D g, Rectangle area, HashMap<ChemistOrganization, Integer> slices) {
//      int total = 0;
//      
//      for(Map.Entry<ChemistOrganization, Integer> entry : slices.entrySet()){
//            total+=entry.getValue();
//        }
//      
//      double curValue = 0.0D;
//      int startAngle = 0;
//      for (Map.Entry<ChemistOrganization, Integer> entry : slices.entrySet()) {
//         startAngle = (int) (curValue * 360 / total);
//         int arcAngle = (int) (entry.getValue() * 360 / total);
//         g.setColor(WHITE);
//         g.fillArc(area.x, area.y, area.width, area.height, 
//         startAngle, arcAngle);
//         curValue += entry.getValue();
//      }
//     }
//    public HashMap<ChemistOrganization, Integer> createSlicesMap(Network network)
//    {
//        HashMap<ChemistOrganization,Integer> createdSlices = new HashMap<>();
//        
//        
//        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList())
//        {
//            if(enterprise instanceof PharmacyEnterprise)
//            {
//                for(Organization chemistOrganization : enterprise.getOrganizationDirectory().getOrganizationList())
//                {
//                    if(chemistOrganization instanceof ChemistOrganization)
//                    {
//                        int discrepancy = (int)(network.pharmacyStockDiscrepancy((ChemistOrganization) chemistOrganization));
//                        createdSlices.put((ChemistOrganization)chemistOrganization,discrepancy);
//                    }
//                }
//            }
//        }
//        
//        return createdSlices;
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
